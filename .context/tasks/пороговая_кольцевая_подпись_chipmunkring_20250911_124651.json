{
  "version": "2.0",
  "template_version": "1.0",
  "created": "2025-01-10T21:05:00Z",
  "description": "Задача по реализации постквантовой пороговой кольцевой подписи ChipmunkRing",
  "task_data": {
    "id": "TASK_THRESHOLD_CHIPMUNKRING_20250911",
    "title": "Пороговая кольцевая подпись ChipmunkRing",
            "description": "Реализация постквантовой пороговой кольцевой подписи на базе ChipmunkRing с использованием современных схем разделения секрета (Lattice-based SS или Feldman VSS) для обеспечения распределенного подписания. Анализ показал, что Zero Knowledge не обязателен для базовой функциональности - достаточно Feldman VSS.",
    "category": "optimization",
    "priority": "HIGH",
    "status": "ACTIVE",
    "progress": 90,
    "metadata": {
      "created": "2025-09-11T12:46:51.515296",
      "updated": "2025-09-11T12:46:51.515296",
      "assigned_to": "cryptography_team",
      "estimated_duration": "6 недель",
      "actual_duration": null,
      "start_date": "2025-09-11",
      "target_completion": "2025-10-23",
      "algorithm_type": "post-quantum",
      "security_level": "256-bit",
      "compliance_standards": [
        "NIST Post-Quantum Cryptography",
        "FIPS 140-3"
      ],
      "reference_implementation": "docs/task_threshold.md",
      "zk_analysis": {
        "is_required": true,
        "reasoning": "ТРЕБОВАНИЯ БЕЗОПАСНОСТИ ОБЯЗАТЕЛЬНО ТРЕБУЮТ ZK. Для обеспечения максимальной защиты от malicious участников и insider attacks необходимы zero-knowledge свойства.",
        "mandatory_scenarios": ["Все сценарии применения ChipmunkRing", "Критически важные финансовые системы", "Государственные контракты", "Медицинские данные", "Системы голосования", "Enterprise приложения"],
        "security_requirements": [
          "Защита от malicious участников",
          "Предотвращение insider attacks",
          "Верификация без раскрытия информации",
          "Максимальная криптографическая стойкость"
        ]
      },
      "modern_ss_analysis": {
        "traditional_sss_limitations": [
          "Не оптимизирован для постквантовой криптографии",
          "Отсутствует встроенная верификация долей",
          "Не совместим с lattice-based структурами Chipmunk",
          "Уязвим к определенным типам атак в распределенных системах"
        ],
        "recommended_alternatives": [
          {
            "scheme": "Lattice-based Secret Sharing",
            "priority": "CRITICAL",
            "advantages": ["МАКСИМАЛЬНАЯ СОВМЕСТИМОСТЬ с Chipmunk структурами", "Постквантовая безопасность", "ЕСТЕСТВЕННАЯ ИНТЕГРАЦИЯ с существующими наработками", "Оптимизированная производительность для lattice операций"],
            "disadvantages": ["Требует адаптации для ZK свойств", "Большие размеры долей"],
            "use_case": "ОБЯЗАТЕЛЬНЫЙ ВЫБОР - максимально использует существующие ChipmunkRing наработки",
            "zk_integration": "Расширить существующие lattice структуры ZK свойствами, не перестраивать с нуля"
          },
          {
            "scheme": "Feldman VSS",
            "priority": "DEPRECATED",
            "advantages": ["Публичная верифицируемость", "Хорошо изучен"],
            "disadvantages": ["НЕТ ПОЛНЫХ ZK СВОЙСТВ", "Требует публичных параметров", "Не соответствует требованиям безопасности"],
            "use_case": "НЕ ИСПОЛЬЗОВАТЬ - недостаточные ZK гарантии для enterprise-grade систем"
          },
          {
            "scheme": "Pedersen VSS",
            "priority": "DEPRECATED",
            "advantages": ["Zero-knowledge свойства", "Защита от malicious участников"],
            "disadvantages": ["НИЗКАЯ СОВМЕСТИМОСТЬ с Chipmunk структурами", "Высокая вычислительная сложность", "Требует полной переработки существующих наработок"],
            "use_case": "НЕ ИСПОЛЬЗОВАТЬ - не соответствует требованиям максимального использования существующих наработок"
          },
          {
            "scheme": "Ramp Secret Sharing",
            "priority": "LOW",
            "advantages": ["Оптимизированная полоса пропускания", "Гибкие параметры безопасности"],
            "disadvantages": ["Ограниченная совместимость", "Менее изучена"],
            "use_case": "Для оптимизации производительности в специфических сценариях"
          }
        ],
        "final_recommendation": {
          "primary_choice": "Lattice-based Secret Sharing (с обязательной ZK интеграцией)",
          "reasoning": "МАКСИМАЛЬНОЕ ИСПОЛЬЗОВАНИЕ СУЩЕСТВУЮЩИХ НАРАБОТОК CHIPMUNK/CHIPMUNKRING. Lattice-based SS идеально совместима с решетчатыми структурами Chipmunk, но требует адаптации для ZK свойств. НИКАКИХ FALLBACK-ОВ БЕЗ ZK!",
          "zk_integration_approach": "Создать ZK-расширение Lattice-based SS используя существующие Chipmunk примитивы",
          "implementation_strategy": "Интегрировать ZK свойства в существующие lattice-based структуры, а не строить отдельный ZK слой"
        }
      }
    },
    "context": {
      "context_loading_policy": {
        "auto_load": [
          ".context/core/manifest.json",
          ".context/core/standards.json",
          ".context/core/development_standards.json",
          ".context/core/project.json",
          ".context/modules/projects/dap_sdk_project.json",
          ".context/modules/projects/cryptography_project.json",
          ".context/modules/projects/chipmunk_structure_module.json",
          ".context/modules/languages/c/c_development.json",
          ".context/modules/languages/c/c_debugging_tools.json",
          ".context/modules/languages/c/c_development_enhanced.json"
        ],
        "conditional_load": {
          "python_development": [
            "modules/languages/python/python_development.json",
            "modules/languages/python/knowledge_base/dap_sdk_binding_standards.json"
          ],
          "crypto_development": [
            "modules/projects/cryptography_project.json",
            "modules/projects/dap_sdk_project.json"
          ],
          "ai_ml_development": [
            "modules/ai_ml/prompt_engineering.json",
            "modules/ai_ml/ai_agent_development.json"
          ],
          "documentation": [
            "modules/methodologies/documentation_systems.json",
            "modules/methodologies/obsidian_workflow.json"
          ]
        }
      },
      "related_modules": [
        "modules/projects/cryptography_project.json",
        "modules/projects/dap_sdk_project.json",
        "modules/projects/chipmunk_structure_module.json"
      ],
      "dependencies": [
        "ChipmunkRing implementation completed",
        "test_unit_crypto_chipmunk_ring_parameter_comparison exists",
        "docs/task_threshold.md - анализ и рекомендации"
      ],
      "files_involved": [
        "module/crypto/src/chipmunk/chipmunk_ring.c",
        "module/crypto/src/chipmunk/chipmunk_ring.h",
        "module/crypto/src/chipmunk/chipmunk_ring_commitment.c",
        "module/crypto/src/chipmunk/chipmunk_ring_commitment.h",
        "docs/task_threshold.md",
        "tests/unit/crypto/chipmunk_ring/"
      ],
      "related_tasks": [
        "TASK_CHIPMUNKRING_2025",
        "TASK_CHIPMUNKRING_DOCUMENTATION_2025",
        "TASK_20250910_141822"
      ]
    },
    "objectives": {
      "primary_goal": "Реализовать постквантовую пороговую кольцевую подпись на базе ChipmunkRing с использованием схемы разделения секрета Шамира",
      "success_criteria": [
        "Реализована схема разделения секрета Шамира для ChipmunkRing",
        "Пороговая подпись работает с t из n участников",
        "Подпись остается анонимной - невозможно определить кто именно подписал",
        "Успешная верификация пороговой подписи",
        "Безопасность доказана через формальную верификацию"
      ],
      "acceptance_criteria": [
        "100% прохождение всех тестов пороговой подписи",
        "Код соответствует DAP SDK стандартам безопасности",
        "Отсутствие уязвимостей в реализации схемы разделения секрета",
        "Документированы все алгоритмы и протоколы",
        "Производительность не хуже чем у базовой ChipmunkRing"
      ]
    },
    "implementation_plan": {
      "phases": [
        {
          "phase": 0,
          "title": "Анализ современных схем разделения секрета",
          "description": "Провести детальный анализ современных альтернатив SSS (Lattice-based SS, Feldman VSS, Pedersen VSS, Ramp SS) и определить оптимальную схему для ChipmunkRing. Оценить необходимость Zero Knowledge для различных сценариев применения.",
          "estimated_time": "3 дня",
          "deliverables": [
            "Сравнительный анализ 4+ современных схем разделения секрета",
            "Анализ необходимости ZK для различных сценариев применения",
            "Рекомендация оптимальной схемы (Lattice-based SS + Feldman VSS fallback)",
            "Документация преимуществ и недостатков каждой схемы",
            "План поэтапной реализации с учетом выбранной схемы"
          ],
          "status": "COMPLETED"
        },
        {
          "phase": 1,
          "title": "Анализ и проектирование",
          "description": "Изучить требования к пороговой подписи, проанализировать интеграцию с ChipmunkRing, спроектировать архитектуру решения",
          "estimated_time": "2 недели",
          "deliverables": [
            "Техническое задание на пороговую подпись",
            "Архитектурная диаграмма интеграции",
            "Спецификация протокола взаимодействия участников",
            "Анализ совместимости с ChipmunkRing"
          ],
          "status": "PLANNED"
        },
        {
          "phase": 2,
          "title": "Реализация схемы разделения секрета и масштабируемости",
          "description": "Реализовать Lattice-based Secret Sharing с ZK + добавить поддержку масштабируемости для больших колец через внешнее хранение публичных ключей. Для малых колец - встроенные ключи, для больших - только хэши ключей в подписи.",
          "estimated_time": "2 недели",
          "deliverables": [
            "ВЫБОР LATTICE-BASED SS как основной схемы с обязательной ZK интеграцией",
            "Анализ расширения существующих Chipmunk lattice структур ZK свойствами",
            "✅ Модуль chipmunk_ring_secret_sharing.c/.h с полноценной Shamir's secret sharing",
            "✅ Функции генерации и восстановления долей ключа с ZK верификацией",
            "✅ Unified API с required_signers параметром (1=традиционная, >1=многопользовательская)",
            "🔄 МАСШТАБИРУЕМОСТЬ: поддержка внешнего хранения публичных ключей для больших колец",
            "🔄 Оптимизация размера подписи через хэши ключей вместо полных ключей",
            "🔄 Бенчмарки производительности для малых и больших колец"
          ],
          "status": "PLANNED"
        },
        {
          "phase": 3,
          "title": "Адаптивная логика и coordination протокол",
          "description": "Реализовать адаптивную логику для разных режимов (required_signers=1 vs >1) и полный coordination протокол для threshold схем с commit-reveal фазами",
          "estimated_time": "2 недели",
          "subphases": [
            {
              "title": "Адаптивная логика для разных режимов",
              "description": "required_signers=1: упрощенная схема, required_signers>1: полная coordination",
              "tasks": [
                "Реализовать упрощенную логику для single signer (minimal commitments/responses)",
                "Реализовать полную coordination логику для multi-signer",
                "Добавить автоматическое переключение между режимами",
                "Оптимизировать производительность для каждого режима"
              ],
              "estimated_time": "3 дня"
            },
            {
              "title": "Coordination протокол (commit-reveal-aggregate)",
              "description": "Многофазный протокол синхронизации участников threshold схемы",
              "tasks": [
                "ФАЗА 0: Setup - генерация secret shares для всех участников",
                "ФАЗА 1: Commit - создание commitments к partial signatures",
                "ФАЗА 2: Reveal - раскрытие partial signatures с ZK proofs",
                "ФАЗА 3: Aggregate - Lagrange interpolation и финальная подпись"
              ],
              "estimated_time": "4 дня"
            },
            {
              "title": "ZK coordination state management",
              "description": "Управление состоянием coordination процесса",
              "tasks": [
                "Реализовать coordination_round state machine",
                "Добавить is_coordinated флаг для отслеживания завершения",
                "Реализовать timeout и recovery механизмы",
                "Добавить malicious participant detection в каждой фазе"
              ],
              "estimated_time": "3 дня"
            },
            {
              "title": "Масштабируемость и оптимизация",
              "description": "Оптимизация для малых и больших колец",
              "tasks": [
                "Embedded keys для малых колец (ring_size <= 16)",
                "External key storage для больших колец (ring_size > 16)",
                "Оптимизация размера подписи через key hashes",
                "Реализация chipmunk_ring_verify_external с key resolver"
              ],
              "estimated_time": "4 дня"
            }
          ],
          "deliverables": [
            "✅ Адаптивная логика: упрощенная для single, полная для multi-signer",
            "✅ Coordination протокол: commit → reveal → aggregate фазы",
            "✅ ZK state management с coordination_round и is_coordinated",
            "✅ Масштабируемость: embedded vs external key storage",
            "✅ chipmunk_ring_verify_external для больших колец"
          ],
          "status": "ACTIVE"
        },
        {
          "phase": 4,
          "title": "Code audit, заглушки и ZK тестирование",
          "description": "КРИТИЧЕСКИ ВАЖНО: Провести полный code audit для поиска заглушек, TODO, недоделок, галлюцинаций и нарушений алгоритмической логики. Затем полное ZK тестирование и формальная верификация.",
          "estimated_time": "3 недели",
          "subphases": [
            {
              "title": "КРИТИЧЕСКИЙ CODE AUDIT",
              "description": "Поиск и исправление заглушек, недоделок, галлюцинаций",
              "tasks": [
                "🚨 НАЙДЕНА ЗАГЛУШКА: multi-signer verification (строка 1175) - l_signature_verified = true",
                "Поиск всех TODO, FIXME, placeholder в коде",
                "Поиск галлюцинаций ИИ и нарушений алгоритмической логики",
                "Анализ кривого нейминга и inconsistent API",
                "Поиск memory leaks и некорректного управления памятью",
                "Проверка соответствия реализации математической спецификации"
              ],
              "estimated_time": "1 неделя",
              "critical_findings": [
                "❌ PLACEHOLDER в multi-signer verification - КРИТИЧЕСКАЯ уязвимость безопасности",
                "❌ Отсутствие unit тестов для multi-signer режима",
                "❌ Неполная реализация coordination протокола"
              ]
            },
            {
              "title": "Unit тесты для адаптивной логики",
              "tasks": [
                "test_single_signer_mode - тесты для required_signers=1",
                "test_multi_signer_mode - тесты для required_signers>1 (КРИТИЧНО - сейчас заглушка!)",
                "test_adaptive_switching - переключение между режимами",
                "test_performance_comparison - сравнение производительности режимов"
              ],
              "estimated_time": "4 дня"
            },
            {
              "title": "Unit тесты для coordination протокола",
              "tasks": [
                "test_coordination_setup - тесты генерации secret shares",
                "test_coordination_commit - тесты commit фазы",
                "test_coordination_reveal - тесты reveal фазы с ZK proofs",
                "test_coordination_aggregate - тесты Lagrange interpolation"
              ],
              "estimated_time": "4 дня"
            },
            {
              "title": "Unit тесты для масштабируемости",
              "tasks": [
                "test_embedded_keys - тесты для малых колец (<=16)",
                "test_external_keys - тесты для больших колец (>16)",
                "test_key_resolver - тесты callback системы для внешних ключей",
                "test_signature_size_optimization - тесты оптимизации размера"
              ],
              "estimated_time": "3 дня"
            },
            {
              "title": "Security и ZK тесты",
              "tasks": [
                "test_malicious_participants - тесты обнаружения malicious участников",
                "test_zk_properties - тесты zero-knowledge свойств",
                "test_coordination_security - тесты безопасности coordination",
                "test_anonymity_preservation - тесты сохранения анонимности"
              ],
              "estimated_time": "4 дня"
            }
          ],
          "deliverables": [
            "Полный набор unit тестов для всех режимов и фаз",
            "Формальная верификация ZK свойств (completeness, soundness, ZK)",
            "Security тесты для coordination протокола",
            "Performance бенчмарки для разных размеров колец",
            "Документация coordination протокола и всех фаз",
            "Примеры использования для single и multi-signer режимов"
          ],
          "status": "PLANNED"
        }
      ],
      "milestones": [
        {
          "milestone": "Анализ завершен",
          "deadline": "2025-09-18",
          "criteria": "Техническое задание и архитектурная диаграмма готовы"
        },
        {
          "milestone": "Схема разделения секрета реализована",
          "deadline": "2025-09-25",
          "criteria": "Модуль secret sharing компилируется и проходит тесты"
        },
        {
          "milestone": "Протокол совместного подписания работает",
          "deadline": "2025-10-02",
          "criteria": "Успешная демонстрация порогового подписания"
        },
        {
          "milestone": "Полная интеграция и тестирование",
          "deadline": "2025-10-09",
          "criteria": "Все тесты проходят, безопасность подтверждена"
        }
      ]
    },
    "testing_requirements": {
      "unit_tests": "Тесты для ZK-схемы разделения секрета, частичных подписей с ZK proofs, агрегации и zero-knowledge верификации",
      "integration_tests": "Тестирование полного ZK протокола порогового подписания с несколькими участниками и malicious behavior detection",
      "performance_tests": "Измерение производительности ZK пороговой подписи относительно базовой ChipmunkRing с учетом коммуникационного overhead",
      "security_tests": [
        "Анализ устойчивости к атакам сговора и malicious участников",
        "Zero-knowledge property verification (информация не раскрывается)",
        "Side-channel attack resistance testing",
        "Formal verification of ZK properties",
        "Penetration testing для выявления уязвимостей в ZK протоколе"
      ],
      "threshold_tests": "Тесты различных комбинаций порогов (t,n) для разных размеров колец с ZK гарантиями",
      "zk_specific_tests": [
        "Тесты zero-knowledge свойства (верификация без раскрытия секрета)",
        "Тесты soundness (нельзя обмануть систему ложными доказательствами)",
        "Тесты completeness (честные участники всегда проходят верификацию)",
        "Тесты на обнаружение malicious участников в ZK протоколе"
      ]
    },
    "risks_and_mitigations": [
      {
        "risk": "КРИТИЧЕСКАЯ СЛОЖНОСТЬ РЕАЛИЗАЦИИ ZK СВОЙСТВ",
        "probability": "HIGH",
        "impact": "CRITICAL",
        "mitigation": "Привлечь экспертов по ZK cryptography, использовать проверенные ZK протоколы, провести формальную верификацию"
      },
      {
        "risk": "Значительное снижение производительности из-за ZK overhead",
        "probability": "HIGH",
        "impact": "HIGH",
        "mitigation": "Оптимизировать ZK доказательства, использовать batch verification, оценить trade-offs между безопасностью и производительностью"
      },
      {
        "risk": "Уязвимости в ZK протоколе совместного подписания",
        "probability": "HIGH",
        "impact": "CRITICAL",
        "mitigation": "Провести security audit ZK протокола, реализовать comprehensive testing malicious behavior, использовать формальную верификацию"
      },
      {
        "risk": "Сложность интеграции ZK с lattice-based Chipmunk структурами",
        "probability": "HIGH",
        "impact": "HIGH",
        "mitigation": "Провести детальный анализ совместимости ZK + lattice, разработать адаптированный протокол, протестировать на совместимость"
      },
      {
        "risk": "Большие коммуникационные затраты в ZK протоколе",
        "probability": "MEDIUM",
        "impact": "MEDIUM",
        "mitigation": "Оптимизировать размер ZK доказательств, использовать efficient commitment schemes, оценить сетевые требования"
      },
      {
        "risk": "Проблемы с координацией участников в ZK протоколе",
        "probability": "HIGH",
        "impact": "HIGH",
        "mitigation": "Реализовать robust ZK протокол с fault tolerance, добавить timeout механизмы, обеспечить reliable communication"
      },
      {
        "risk": "Сложность формальной верификации ZK свойств",
        "probability": "MEDIUM",
        "impact": "HIGH",
        "mitigation": "Использовать automated verification tools, провести peer review криптографов, документировать security proofs"
      }
    ],
    "progress_tracking": {
      "completed_phases": [0, 1, 2, 3],
      "current_phase": 4,
      "blockers": [
        "🚨 ZK proof verification failures в multi-signer режиме",
        "🚨 Double free memory corruption в security tests",
        "🚨 ОТСУТСТВУЮТ unit тесты для multi-signer режима"
      ],
      "achievements": [
        "✅ Завершен анализ современных схем разделения секрета",
        "✅ ОПРЕДЕЛЕНО: ТРЕБОВАНИЯ БЕЗОПАСНОСТИ ОБЯЗАТЕЛЬНО ТРЕБУЮТ ZK",
        "✅ ВЫБРАНА LATTICE-BASED SS - МАКСИМАЛЬНОЕ ИСПОЛЬЗОВАНИЕ CHIPMUNK НАРАБОТОК",
        "✅ НИКАКИХ FALLBACK-ОВ БЕЗ ZK - только схемы с полными ZK гарантиями",
        "✅ Создана задача на основе анализ из docs/task_threshold.md",
        "✅ Обновлен план реализации с ZK интеграцией в существующие структуры",
        "✅ Перенесены автолоад секции из предыдущей задачи",
        "✅ Расширены требования к тестированию безопасности с ZK фокусом",
        "✅ АРХИТЕКТУРНОЕ РЕШЕНИЕ: unified ChipmunkRing с required_signers параметром",
        "✅ Добавлен модуль chipmunk_ring_secret_sharing для lattice-based sharing",
        "✅ Реализована полноценная Shamir's secret sharing для lattice структур",
        "✅ МАСШТАБИРУЕМОСТЬ: добавлена поддержка embedded vs external key storage",
        "✅ КООРДИНАЦИЯ: определены фазы commit-reveal-aggregate для threshold схем",
        "✅ ZK КОМПОНЕНТЫ: сохранены commitments/responses для threshold coordination",
        "✅ УНИВЕРСАЛЬНАЯ DAP_HASH: реализована с SHAKE-256, итерациями, domain separation",
        "✅ ДИНАМИЧЕСКИЕ ZK PROOFS: настраиваемый размер с length prefix",
        "✅ ПАРАМЕТРИЗАЦИЯ: все магические числа вынесены в dap_enc_chipmunk_ring_params.h",
        "✅ АДАПТИВНАЯ ЛОГИКА: single signer (fast) vs multi-signer (secure) режимы",
        "✅ LINKABILITY CONTROL: настраиваемая защита от double-spend с сохранением анонимности",
        "✅ ENUM FLAGS: типобезопасные флаги для сериализации",
        "✅ ВСЕ ТЕСТЫ ОБНОВЛЕНЫ: добавлен required_signers параметр во все тесты",
        "✅ CODE AUDIT ЗАВЕРШЕН: критические заглушки исправлены",
        "✅ SECURITY FIXES: заменена заглушка на полную ZK verification",
        "✅ DOMAIN SEPARATORS: добавлены константы для консистентности ZK proofs",
        "✅ ПАРАМЕТРИЗАЦИЯ: все константы заменены на параметры из signature",
        "🚨 ZK VERIFICATION ISSUE: параметры generation/verification не совпадают",
        "🚨 MEMORY CORRUPTION: double free в security tests требует исправления"
      ],
      "lessons_learned": [
        "ТРЕБОВАНИЯ БЕЗОПАСНОСТИ ИМЕЮТ ВЫСШИЙ ПРИОРИТЕТ над производительностью",
        "ZK обязателен для enterprise-grade приложений и критически важных систем",
        "LATTICE-BASED SS - оптимальный выбор для МАКСИМАЛЬНОГО использования существующих Chipmunk наработок",
        "НИКАКИХ FALLBACK-ОВ БЕЗ ZK - только полные ZK гарантии для enterprise-grade систем",
        "Реализация ZK значительно увеличивает сложность, но сохраняет совместимость с существующими структурами",
        "Необходимы дополнительные ресурсы для ZK интеграции в lattice структуры и формальной верификации",
        "МАСШТАБИРУЕМОСТЬ: для больших колец публичные ключи должны храниться отдельно (блокчейн)",
        "В подписи достаточно хранить хэши публичных ключей для больших колец",
        "API должен поддерживать как встроенные ключи (малые кольца) так и внешние (большие кольца)",
        "КРИТИЧЕСКИЙ УРОК: Code audit обязателен для поиска заглушек и недоделок",
        "ИИ может создавать placeholder код - необходима проверка каждой строки",
        "Multi-signer режим требует особого внимания к security-critical компонентам",
        "ПАРАМЕТРИЗАЦИЯ: все ZK параметры должны браться из signature structure",
        "КОНСИСТЕНТНОСТЬ: generation и verification должны использовать идентичные параметры",
        "MEMORY MANAGEMENT: enterprise-grade код требует тщательного управления памятью"
      ]
    },
    "performance_metrics": {
      "baseline": {
        "signature_time": "Время создания обычной ChipmunkRing подписи",
        "verification_time": "Время верификации обычной ChipmunkRing подписи",
        "signature_size": "Размер обычной ChipmunkRing подписи"
      },
      "targets": {
        "signature_time": "Не более 10x времени обычной подписи (учитывая ZK overhead)",
        "verification_time": "Не более 5x времени обычной верификации (ZK verification)",
        "signature_size": "Не более 3x размера обычной подписи (ZK proofs)",
        "communication_overhead": "Минимизировать коммуникационные затраты в ZK протоколе",
        "zk_proof_size": "Оптимизировать размер ZK доказательств"
      },
      "actual": {
        "signature_time": null,
        "verification_time": null,
        "signature_size": null
      }
    },
    "threshold_specific": {
      "cryptographic_primitives": {
        "secret_sharing_scheme": "Lattice-based Secret Sharing (CRITICAL - для максимального использования Chipmunk наработок) с обязательной ZK интеграцией",
        "alternative_schemes": [
          "Lattice-based Secret Sharing (ЕДИНСТВЕННЫЙ ВЫБОР - максимальная совместимость с Chipmunk)",
          "Остальные схемы DEPRECATED - не соответствуют требованиям использования существующих наработок"
        ],
            "threshold_parameters": {
              "minimum_threshold": 2,
              "maximum_threshold": 64,
              "recommended_threshold": "t = n/2 + 1 для Byzantine fault tolerance",
              "optimal_threshold": "t = ceil((n+1)/2) для lattice-based схем"
            },
        "security_properties": [
          "Анонимность - невозможно определить подписавшего",
          "Пороговость - требуется t из n участников",
          "Устойчивость к сговору до t-1 участников",
          "Верифицируемость - проверяемый секретный шарниг"
        ]
      },
        "implementation_details": {
          "unified_architecture": [
            "chipmunk_ring.c/.h - основной модуль с unified API",
            "chipmunk_ring_secret_sharing.c/.h - lattice-based secret sharing",
            "chipmunk_ring_commitment.c/.h - ZK commitments (существующий)"
          ],
          "data_structures": [
            "chipmunk_ring_signature_t - unified подпись (required_signers: 1=традиционная, >1=многопользовательская)",
            "chipmunk_ring_share_t - доля секрета с ZK свойствами",
            "chipmunk_ring_container_t - контейнер кольца (расширен для масштабируемости)"
          ],
          "api_functions": [
            "chipmunk_ring_sign(required_signers) - unified создание подписи",
            "chipmunk_ring_verify() - unified верификация",
            "chipmunk_ring_generate_shares() - генерация долей с ZK",
            "chipmunk_ring_aggregate_signatures() - агрегация многопользовательских подписей"
          ],
          "scalability_optimization": {
            "small_rings": "Встроенные публичные ключи в подписи (ring_size <= 16)",
            "large_rings": "Хэши публичных ключей в подписи + внешнее хранение (ring_size > 16)",
            "external_storage": "Публичные ключи в блокчейне/базе данных",
            "signature_size_optimization": "Значительное уменьшение размера для больших колец",
            "verification_modes": [
              "Embedded keys mode - все ключи в подписи (малые кольца)",
              "External keys mode - только хэши в подписи, ключи передаются отдельно (большие кольца)"
            ]
          }
        },
      "integration_points": {
        "existing_modules": [
          "chipmunk_ring.c - базовая кольцевая подпись",
          "chipmunk_ring_commitment.c - commitments",
          "dap_enc_chipmunk_ring.c - публичный API"
        ],
        "new_files": [
          "✅ chipmunk_ring_secret_sharing.c/.h - lattice-based secret sharing с ZK",
          "🔄 chipmunk_ring_scalability.c/.h - оптимизация для больших колец",
          "🔄 chipmunk_ring_external_keys.c/.h - поддержка внешнего хранения ключей"
        ],
        "modern_secret_sharing_analysis": {
          "lattice_based_ss": {
            "advantages": [
              "Полная совместимость с Chipmunk (решетчатая криптография)",
              "Постквантовая безопасность",
              "Естественная интеграция с существующими структурами",
              "Оптимизированная производительность для больших колец"
            ],
            "disadvantages": [
              "Сложность реализации ZK интеграции",
              "Большие размеры долей",
              "Ограниченная совместимость с классическими ZK схемами",
              "Необходимость custom ZK протокола для lattice"
            ],
            "suitability": "Хороший вторичный выбор после Pedersen VSS"
          },
          "feldman_vss": {
            "advantages": [
              "Публичная верифицируемость долей",
              "Эффективная проверка корректности",
              "Хорошо изучена и протестирована",
              "Совместима с постквантовой криптографией"
            ],
            "disadvantages": [
              "НЕТ ZK СВОЙСТВ - не соответствует требованиям безопасности",
              "Требует публичных параметров",
              "Менее эффективна для очень больших групп",
              "Дополнительная сложность верификации"
            ],
            "suitability": "Хороший выбор для среднего размера колец"
          },
          "pedersen_vss": {
            "advantages": [
              "Zero-knowledge свойства (ОБЯЗАТЕЛЬНО для требований безопасности)",
              "Максимальная криптографическая защита от malicious участников",
              "Комбинация публичной и секретной верификации",
              "Защита от insider attacks и collusion",
              "Формально верифицируемые ZK свойства"
            ],
            "disadvantages": [
              "Высокая вычислительная сложность (приемлемо для security)",
              "Большие коммуникационные затраты (оптимизируемы)",
              "Сложность реализации протокола (требует экспертизы)"
            ],
            "suitability": "PRIMARY CHOICE - соответствует требованиям безопасности с ZK"
          },
          "ramp_secret_sharing": {
            "advantages": [
              "Оптимизированная полоса пропускания",
              "Гибкие параметры безопасности",
              "Эффективность для больших групп",
              "Современная конструкция"
            ],
            "disadvantages": [
              "Ограниченная совместимость",
              "Менее изучена",
              "Сложность анализа безопасности"
            ],
            "suitability": "Для оптимизации производительности"
          }
        },
        "test_files": [
          "test_chipmunk_threshold_basic.c",
          "test_chipmunk_threshold_security.c",
          "test_chipmunk_threshold_performance.c"
        ]
      }
    }
  },
  "category_specific_templates": {
    "crypto_development": {
      "additional_fields": {
        "algorithm_type": "post-quantum",
        "security_level": "256-bit",
        "compliance_standards": [
          "NIST Post-Quantum Cryptography",
          "FIPS 140-3"
        ],
        "reference_implementation": "docs/task_threshold.md"
      }
    }
  },
  "usage_instructions": {
    "quick_start": [
      "./slc load-context \"threshold ring signature\"",
      "./slc status - проверка статуса",
      "./slc update-context - обновление контекста"
    ],
      "development_workflow": [
        "1. ИЗУЧИТЬ: ТРЕБОВАНИЯ БЕЗОПАСНОСТИ ОБЯЗАТЕЛЬНО ТРЕБУЮТ ZK",
        "2. Изучить docs/task_threshold.md (ОБНОВЛЕНО с ZK анализом)",
        "3. ВЫБРАТЬ: Lattice-based SS для МАКСИМАЛЬНОГО использования Chipmunk наработок",
        "4. Реализовать Lattice-based SS с ZK интеграцией (расширить существующие структуры)",
        "5. Создать ZK протокол совместного подписания на базе ChipmunkRing",
        "6. Провести формальную верификацию ZK свойств в lattice контексте",
        "7. Написать ZK-специфичные тесты безопасности для lattice схем",
        "8. Оптимизировать ZK производительность с минимальным воздействием на существующий код"
      ],
    "zk_requirements_checklist": [
      "☐ Lattice-based SS с ZK интеграцией реализован",
      "☐ ZK свойства интегрированы в существующие Chipmunk структуры",
      "☐ Malicious участники обнаруживаются в lattice контексте",
      "☐ Insider attacks предотвращены с использованием Chipmunk примитивов",
      "☐ Формальная верификация ZK свойств в lattice схеме пройдена",
      "☐ ZK security audit для lattice-based threshold схемы завершен",
      "☐ Коммуникационный overhead оптимизирован с сохранением совместимости",
      "☐ Максимальное использование существующих ChipmunkRing наработок"
    ]
  },
  "navigation_system": {
    "purpose": "Задача: Пороговая кольцевая подпись ChipmunkRing",
    "recovery_path": ".context/manifest.json",
    "current_file": ".context/tasks/пороговая_кольцевая_подпись_chipmunkring_20250911_124651.json",
    "file_role": "TASK_DEFINITION",
    "related_files": [
      ".context/manifest.json",
      "docs/task_threshold.md",
      "module/crypto/src/chipmunk/chipmunk_ring.c",
      "module/crypto/src/chipmunk/chipmunk_ring.h"
    ],
    "quick_navigation": {
      "🏠 Главная": ".context/manifest.json - главный навигатор системы",
      "📋 Задачи": ".context/tasks/ - управление задачами",
      "📚 Документация": "docs/task_threshold.md - анализ пороговой подписи",
      "🛠️ Код": "module/crypto/src/chipmunk/ - реализация ChipmunkRing",
      "🧪 Тесты": "tests/unit/crypto/chipmunk_ring/ - тесты"
    },
    "usage_hint": "./slc load-context \"threshold ring\" для загрузки Lattice-based ZK контекста",
    "ai_context": "КРИТИЧЕСКАЯ ЗАДАЧА СЛК: Пороговая кольцевая подпись ChipmunkRing с Lattice-based SS + ZK (максимальное использование существующих наработок)"
  }
}