#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ DAP SDK
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–¥–µ–∫—Å—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É

set -e

CONTEXT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
PROJECT_ROOT="$(cd "$CONTEXT_DIR/.." && pwd)"

echo "üîÑ Updating DAP SDK context..."
echo "üìÅ Context: $CONTEXT_DIR"
echo "üìÅ Project: $PROJECT_ROOT"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
update_timestamp() {
    local file="$1"
    if [[ -f "$file" ]]; then
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ updated –≤ JSON —Ñ–∞–π–ª–µ
        local timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º jq –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏–Ω–∞—á–µ sed
        if command -v jq >/dev/null 2>&1; then
            jq --arg ts "$timestamp" '.updated = $ts' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
        else
            sed -i.bak "s/\"updated\": \"[^\"]*\"/\"updated\": \"$timestamp\"/" "$file"
            rm -f "$file.bak"
        fi
        echo "‚úÖ Updated: $(basename "$file")"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
calculate_stats() {
    echo "üìä Calculating statistics..."
    
    # –ü–æ–¥—Å—á–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ crypto/src/chipmunk
    local chipmunk_dir="$PROJECT_ROOT/crypto/src/chipmunk"
    if [[ -d "$chipmunk_dir" ]]; then
        local total_files=$(find "$chipmunk_dir" -name "*.c" -o -name "*.h" | wc -l)
        local total_lines=$(find "$chipmunk_dir" -name "*.c" -o -name "*.h" -exec wc -l {} + | tail -1 | awk '{print $1}')
        echo "üìà Chipmunk files: $total_files"
        echo "üìà Chipmunk lines: $total_lines"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    echo ""
    echo "üîç Checking structure..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    local files_to_check=(
        "$CONTEXT_DIR/index.json"
        "$CONTEXT_DIR/structure.json"
        "$CONTEXT_DIR/context.json"
    )
    
    for file in "${files_to_check[@]}"; do
        if [[ -f "$file" ]]; then
            echo "‚úÖ Found: $(basename "$file")"
        else
            echo "‚ùå Missing: $(basename "$file")"
        fi
    done
    
    echo ""
    echo "üïê Updating timestamps..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    update_timestamp "$CONTEXT_DIR/index.json"
    update_timestamp "$CONTEXT_DIR/context.json"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if [[ -d "$CONTEXT_DIR/.local" ]]; then
        echo "üìÅ Updating local files..."
        update_timestamp "$CONTEXT_DIR/.local/context.json"
        update_timestamp "$CONTEXT_DIR/.local/progress.json"
        update_timestamp "$CONTEXT_DIR/.local/index.json"
    fi
    
    echo ""
    calculate_stats
    
    echo ""
    echo "‚úÖ Context updated successfully!"
    echo "üìù Files ready for commit (except .local/)"
}

# –ó–∞–ø—É—Å–∫
main "$@" 