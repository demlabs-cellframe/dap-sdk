cmake_minimum_required(VERSION 3.10)
project (dap_crypto_XKCP)

SET(XKCP_BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR}/xkcp_build_src/)

message("[*] XKCP build dir: ${XKCP_BUILD_DIR}")
message("[*] XKCP make command: ${CMAKE_MAKE_PROGRAM}")
message("[*] XKCP make CC: ${CMAKE_C_COMPILER}")
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/ DESTINATION ${XKCP_BUILD_DIR})

add_custom_target(BuildXKCP ALL
    COMMAND ${CMAKE_COMMAND} -E env CC=${CMAKE_C_COMPILER} ${CMAKE_MAKE_PROGRAM} -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} -C ./xkcp_build_src libdap-XKCP.a
)

SET(XKCP_BUILD_INCLUDES ${XKCP_BUILD_DIR}/bin/libdap-XKCP.a.headers/)
SET(XKCP_BUILD_LIB ${XKCP_BUILD_DIR}/bin/libdap-XKCP.a )
file(MAKE_DIRECTORY ${XKCP_BUILD_INCLUDES})

add_library(${PROJECT_NAME} STATIC IMPORTED GLOBAL)
add_dependencies(${PROJECT_NAME} BuildXKCP) 

#hack to create a path for INTERFACE_INCLUDE_DIRECTORIES, with will be populated later


set_target_properties(${PROJECT_NAME}
    PROPERTIES IMPORTED_LOCATION ${XKCP_BUILD_LIB}
)

set_target_properties(${PROJECT_NAME}
    PROPERTIES INTERFACE_INCLUDE_DIRECTORIES ${XKCP_BUILD_INCLUDES}
)

set_target_properties(${PROJECT_NAME}  PROPERTIES PUBLIC_HEADER ${XKCP_BUILD_INCLUDES})


if(INSTALL_DAP_SDK)

INSTALL(DIRECTORY ${XKCP_BUILD_INCLUDES} DESTINATION include/dap/crypto/XKCP)
INSTALL(FILES ${XKCP_BUILD_LIB} DESTINATION lib/dap/crypto/)

endif()

